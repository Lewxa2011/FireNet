{
  "rules": {
    "deviceAuth": {
      "$hashedDeviceId": {
        ".read": "auth != null && (auth.uid == data.child('userId').val())",
        ".write": "auth != null && (!data.exists() || auth.uid == data.child('userId').val())",

        "hashedDeviceId": {
          ".validate": "newData.isString() && newData.val() == $hashedDeviceId"
        },
        "userId": {
          ".validate": "newData.isString() && newData.val() == auth.uid"
        },
        "encryptedEmail": {
          ".validate": "newData.isString()"
        },
        "encryptedPassword": {
          ".validate": "newData.isString()"
        },
        "encryptedPlayerName": {
          ".validate": "newData.isString()"
        },
        "createdAt": {
          ".validate": "newData.isNumber()"
        },
        "lastLoginAt": {
          ".validate": "newData.isNumber()"
        }
      }
    },

    "rooms": {
      ".read": "auth != null",

      "$roomId": {
        ".write": "auth != null && (!data.exists() || auth.uid == data.child('masterClientId').val())",

        "name": {
          ".validate": "newData.isString()"
        },
        "masterClientId": {
          ".validate": "newData.isString() && newData.val() == auth.uid"
        },
        "maxPlayers": {
          ".validate": "newData.isNumber() && newData.val() > 0"
        },
        "playerCount": {
          ".validate": "newData.isNumber() && newData.val() >= 0"
        },
        "isOpen": {
          ".validate": "newData.isBoolean()"
        },
        "isVisible": {
          ".validate": "newData.isBoolean()"
        },
        "gameVersion": {
          ".validate": "newData.isString()"
        },
        "createdAt": {
          ".validate": "newData.isNumber()"
        },

        "players": {
          "$playerId": {
            ".write": "auth != null && (auth.uid == $playerId || auth.uid == root.child('rooms').child($roomId).child('masterClientId').val())",

            "userId": {
              ".validate": "newData.isString() && newData.val() == $playerId"
            },
            "nickName": {
              ".validate": "newData.isString()"
            },
            "isMasterClient": {
              ".validate": "newData.isBoolean()"
            },
            "customProperties": {
              ".validate": "!newData.exists() || newData.hasChildren()"
            }
          }
        },

        "rpc": {
          "$rpcId": {
            ".write": "auth != null && ((!data.exists() && root.child('rooms').child($roomId).child('players').child(auth.uid).exists()) || (data.exists() && (auth.uid == data.child('senderId').val() || auth.uid == root.child('rooms').child($roomId).child('masterClientId').val())))",

            "senderId": {
              ".validate": "newData.isString() && newData.val() == auth.uid"
            },
            "method": {
              ".validate": "newData.isString()"
            },
            "params": {
              ".validate": "newData.isString()"
            },
            "timestamp": {
              ".validate": "newData.isNumber()"
            },
            "target": {
              ".validate": "newData.isString()"
            },
            "buffered": {
              ".validate": "newData.isBoolean()"
            },
            "targetId": {
              ".validate": "newData.isString() || !newData.exists()"
            }
          }
        }
      }
    },

    "lobby": {
      "$lobbyName": {
        ".read": "auth != null",

        "players": {
          "$playerId": {
            ".write": "auth != null && auth.uid == $playerId",

            "userId": {
              ".validate": "newData.isString() && newData.val() == $playerId"
            },
            "nickName": {
              ".validate": "newData.isString()"
            }
          }
        }
      }
    }
  }
}
